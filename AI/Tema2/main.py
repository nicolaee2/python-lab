from SpecialSudokuSolver import SpecialSudokuSolver


def main():
    board = [
        [8, 4, 0, 0, 5, 0, 0, 0, 0],
        [3, 0, 0, 6, 0, 8, 0, 4, 0],
        [0, 0, 0, 4, 0, 9, 0, 0, 0],
        [0, 2, 3, 0, 0, 0, 9, 8, 0],
        [1, 0, 0, 0, 0, 0, 0, 0, 4],
        [0, 9, 8, 0, 0, 0, 1, 6, 0],
        [0, 0, 0, 5, 0, 3, 0, 0, 0],
        [0, 3, 0, 1, 0, 6, 0, 0, 7],
        [0, 0, 0, 0, 2, 0, 0, 1, 3]
    ]

    special_cells = [(0, 6), (2, 2), (2, 8), (3, 4), (4, 3), (4, 5), (5, 4), (6, 0), (6, 6), (8, 2)]

    # board2 = [
    #     [0, 0, 0, 0, 0, 4, 0, 0, 0],
    #     [0, 0, 0, 0, 0, 0, 9, 0, 5],
    #     [6, 3, 0, 0, 0, 0, 7, 8, 0],
    #     [0, 0, 4, 6, 0, 0, 0, 0, 9],
    #     [0, 5, 1, 0, 0, 3, 0, 0, 0],
    #     [3, 9, 0, 5, 0, 0, 0, 0, 0],
    #     [4, 0, 0, 3, 5, 1, 6, 9, 0],
    #     [7, 0, 0, 0, 2, 0, 0, 1, 0],
    #     [0, 0, 0, 0, 0, 0, 2, 5, 0]
    # ]
    #
    # special_cells2 = [(0, 1), (0, 4), (0, 5), (0, 7),
    #                   (1, 1), (1, 3), (1, 5), (1, 7),
    #                   (2, 0), (2, 2), (2, 7), (2, 8),
    #                   (3, 0), (3, 2), (3, 3), (3, 5),
    #                   (4, 0), (4, 4), (4, 6), (4, 8),
    #                   (5, 2), (5, 4), (5, 7), (5, 8),
    #                   (6, 0), (6, 1), (6, 2), (6, 6),
    #                   (7, 1), (7, 3), (7, 4), (7, 6),
    #                   (8, 3), (8, 5), (8, 6), (8, 8)]

    solver = SpecialSudokuSolver(board, special_cells)
    solution_board, solution_found = solver.find_solution()

    if solution_found:
        print(solution_board)
    else:
        print("No solution found!")


main()
